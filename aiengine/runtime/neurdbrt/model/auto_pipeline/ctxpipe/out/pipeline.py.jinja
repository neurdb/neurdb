"""
THIS FILE IS AUTO-GENERATED BY AEXPLORE, A MODULE OF ASCENT. FEEL FREE TO EDIT.

NOTE: This file is licensed under the 0BSD license. You are allowed to remove 
the copyright notice below.  

Copyright (c) ASCENT Contributors.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
"""
{{ meta.head }}
{% for component in components %}
{{ component.head }}
{% endfor %}
{{ model.head }}


{{ meta.global }}

{{ model.global }}

{% for component in components %}
{{ component.global }}

{% endfor %}
{% for component in components %}
def component{{ loop.index }}(train_x, test_x, train_y, test_y):
    {{ component.local }}
    return train_x, test_x, train_y, test_y


{% endfor %}
def main(data_path: str):
    # load data
    data = pd.read_csv(os.path.join(data_path, "data.csv"))

    data_x = data.drop(columns=["{{ label_column }}"])
    data_y = data["{{ label_column }}"]

    ratio = 0.8
    split_random_state = 42
    
    train_x, test_x, train_y, test_y = train_test_split(
        data_x,
        data_y,
        train_size=ratio,
        test_size=1 - ratio,
        random_state=split_random_state,
    )

    # run components
    pipeline = [
        {% for component in components %}
        component{{ loop.index }},
        {% endfor %}
    ]

    for i, component in enumerate(pipeline):
        train_x, test_x, train_y, test_y = component(train_x, test_x, train_y, test_y)
        print(f"component {i + 1} done")
        print("train_x.head():")
        print(train_x.head())
        print("test_x.head():")
        print(test_x.head())
        print()

    {{ model.local }}
    # save result
    combined_data = pd.concat([train_x, test_x], axis=0)
    combined_data["{{ label_column }}"] = [*train_y, *test_y]
    combined_data.to_csv(os.path.join(data_path, "result.csv"), index=False)

if __name__ == "__main__":
    # assume dataset is in {{ data_dir }}
    main(data_path="{{ data_dir }}")
